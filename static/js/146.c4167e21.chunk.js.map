{"version":3,"file":"static/js/146.c4167e21.chunk.js","mappings":"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","sources":["components/ContactMe/ContactInfoCard/ContactInfoCard.jsx","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","components/ContactMe/ContactForm/ContactForm.jsx","components/ContactMe/ContactMe.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./ContactInfoCard.css\";\r\n\r\nconst ContactInfoCard = ({ iconUrl, text, link }) => {\r\n  return (\r\n    <div className=\"contact-details-card\">\r\n      <div className=\"icon\">\r\n        <span>{iconUrl}</span>\r\n      </div>\r\n      <p>{text}</p>\r\n      <a href={link}>{link}</a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactInfoCard;\r\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.11.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import React, { useRef } from \"react\";\r\nimport \"./ContactForm.css\";\r\nimport emailjs from \"@emailjs/browser\";\r\n\r\nconst ContactForm = ({ content }) => {\r\n  const form = useRef();\r\n\r\n  const sendEmail = (e) => {\r\n    e.preventDefault();\r\n\r\n    emailjs\r\n      .sendForm(\r\n        \"service_p0hew3c\",\r\n        \"template_4ijnclb\",\r\n        form.current,\r\n        \"user_iRyFgIPdirDemrF3xnvPo\"\r\n      )\r\n      .then(\r\n        (result) => {\r\n          console.log(result.text);\r\n        },\r\n        (error) => {\r\n          console.log(error.text);\r\n        }\r\n      );\r\n  };\r\n  return (\r\n    <div className=\"contact-form-content\">\r\n      <img src=\"./assets/img10.png\" alt=\"contact\" />\r\n      <form ref={form} onSubmit={sendEmail}>\r\n        <div className=\"name-container\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstname\"\r\n            placeholder={content.lastname}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"lastname\"\r\n            placeholder={content.firstname}\r\n            required\r\n          />\r\n        </div>\r\n        <input type=\"email\" name=\"email\" placeholder=\"Email\" required />\r\n        <textarea\r\n          type=\"text\"\r\n          name=\"message\"\r\n          placeholder=\"Message\"\r\n          rows={3}\r\n          required\r\n        />\r\n\r\n        <button type=\"submit\">{content.envoyer}</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport \"./ContactMe.css\";\r\nimport { CiMail } from \"react-icons/ci\";\r\nimport { FaGithub } from \"react-icons/fa\";\r\nimport { FaLinkedin } from \"react-icons/fa\";\r\nimport ContactInfoCard from \"./ContactInfoCard/ContactInfoCard\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\n\r\nconst ContactMe = ({ content }) => {\r\n  return (\r\n    <section className=\"contact-container\" id=\"contact\">\r\n      <h5>Contact</h5>\r\n      <div className=\"contact-content\">\r\n        <div style={{ flex: 1 }}>\r\n          <ContactInfoCard\r\n            text=\"mohamedhassan.contact@gmail.com\"\r\n            iconUrl={<CiMail />}\r\n          />\r\n          <ContactInfoCard\r\n            link={\r\n              <a href=\"https://www.linkedin.com/in/mohamed-hassen-856063106/\">\r\n                Linkedin | Mohamed Hassen\r\n              </a>\r\n            }\r\n            iconUrl={<FaLinkedin />}\r\n          />\r\n          <ContactInfoCard\r\n            link={\r\n              <a href=\"https://github.com/mohamedhassan04\">\r\n                GitHub | mohamedhassan04\r\n              </a>\r\n            }\r\n            iconUrl={<FaGithub />}\r\n          />\r\n        </div>\r\n        <div style={{ flex: 1 }}>\r\n          <ContactForm content={content} />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ContactMe;\r\n"],"names":["_ref","iconUrl","text","link","_jsxs","className","children","_jsx","href","store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","sendForm","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","content","useRef","src","alt","ref","onSubmit","e","preventDefault","emailjs","current","then","result","console","log","error","type","name","placeholder","lastname","required","firstname","rows","envoyer","id","style","flex","ContactInfoCard","CiMail","FaLinkedin","FaGithub","ContactForm"],"sourceRoot":""}